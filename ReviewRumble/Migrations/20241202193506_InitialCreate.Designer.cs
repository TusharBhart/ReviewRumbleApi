// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviewRumble.Repository;

#nullable disable

namespace ReviewRumble.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20241202193506_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReviewRumble.Models.PullRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssignedFirstReviewerId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedSecondReviewerId")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstReviewerStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Repository")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReviewerId")
                        .HasColumnType("int");

                    b.Property<string>("SecondReviewerStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedFirstReviewerId");

                    b.HasIndex("AssignedSecondReviewerId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("PullRequests");
                });

            modelBuilder.Entity("ReviewRumble.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PendingPrsToReview")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrsReviewed")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("ReviewRumble.Models.PullRequest", b =>
                {
                    b.HasOne("ReviewRumble.Models.Reviewer", "AssignedFirstReviewer")
                        .WithMany()
                        .HasForeignKey("AssignedFirstReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReviewRumble.Models.Reviewer", "AssignedSecondReviewer")
                        .WithMany()
                        .HasForeignKey("AssignedSecondReviewerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReviewRumble.Models.Reviewer", null)
                        .WithMany("AssignedPullRequests")
                        .HasForeignKey("ReviewerId");

                    b.Navigation("AssignedFirstReviewer");

                    b.Navigation("AssignedSecondReviewer");
                });

            modelBuilder.Entity("ReviewRumble.Models.Reviewer", b =>
                {
                    b.Navigation("AssignedPullRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
